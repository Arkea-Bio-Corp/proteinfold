/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// General configuration options
//

process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}

//
// DBs and parameters preparation options
//
process {
    withName: 'UNTAR' {
        ext.args2 = '--no-same-owner'
    }

    withName: 'ARIA2' {
        publishDir = [
            enabled: false
        ]
    }
}

if (params.mode == 'AF2') {
    process {
        withName: 'RUN_AF2' {
            ext.args   = params.use_gpu ? '--use_gpu_relax=true' : '--use_gpu_relax=false'
            publishDir = [
                path: { "${params.outdir}/AlphaFold2" },
                mode: 'copy',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            ]
        }

        withName: 'RUN_AF2_MSA' {
            ext.args =  params.max_template_date ? "--max_template_date ${params.max_template_date}" : ''
            publishDir = [
                path: { "${params.outdir}/AlphaFold2" },
                mode: 'copy',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: 'RUN_AF2_PRED' {
            ext.args   = params.use_gpu ? '--use_gpu_relax=true' : '--use_gpu_relax=false'
            publishDir = [
                path: { "${params.outdir}/AlphaFold2" },
                mode: 'copy',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: 'UNTAR|GUNZIP|COMBINE_UNIPROT|DOWNLOAD_PDBMMCIF' {
            publishDir = [
                path: {"${params.outdir}/DBs/AF2"},
                mode: 'symlink',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            ]
        }
    }
}

if (params.mode == 'colabfold_webserver') {
    process {
        withName: 'UNTAR' {
            publishDir = [
                path: {"${params.outdir}/DBs/colabfold_webserver"},
                mode: 'symlink',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
        withName: 'COLABFOLD_BATCH' {
            ext.args = [
                params.use_gpu ? '' : '--cpu',
                params.use_amber ? '--amber' : '',
                params.use_templates ? '--templates' : '',
                params.host_url ? "--host-url ${params.host_url}" : ''
            ].join(' ').trim()
            publishDir = [
                path: { "${params.outdir}/colabfold_webserver" },
                mode: 'copy',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: '*.*'
            ]
        }
    }
}

if (params.mode == 'colabfold_local') {
    process {
        withName: '.*:MMSEQS_.*' {
            publishDir = [
                enabled: false
            ]
        }
        withName: 'UNTAR' { //TODO
            publishDir = [
                path: {"${params.outdir}/DBs/colabfold_local"},
                mode: 'symlink',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
        withName: 'COLABFOLD_BATCH' {
            ext.args = [
                params.use_gpu ? '' : '--cpu',
                params.use_amber ? '--amber' : '',
                params.use_templates ? '--templates' : ''
            ].join(' ').trim()
            publishDir = [
                path: { "${params.outdir}/colabfold_local" },
                mode: 'copy',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                pattern: '*.*'
            ]
        }
    }
}
